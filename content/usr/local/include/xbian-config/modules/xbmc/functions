#!/bin/bash
#
#Copyright 2012 CurlyMo <development@xbian.org>
#
#This file is part of XBian - XBMC on the Raspberry Pi.
#
#XBian is free software: you can redistribute it and/or modify it under the
#terms of the GNU General Public License as published by the Free Software
#Foundation, either version 3 of the License, or (at your option) any later
#version.
#
#XBian is distributed in the hope that it will be useful, but WITHOUT ANY
#WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
#FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
#details.
#
#You should have received a copy of the GNU General Public License along
#with XBian. If not, see <http://www.gnu.org/licenses/>

# Sets the GUI resolution of XBMC
#  $1 Resolution [String] One of the available resolutions
# Returns
# - 0: Failed
# - 1: Success
function setXBMCGUIResFn() {
	NEWRES=$1;
	OLDRES=$(sed -ne 's/\(.*<guires>\)\([0-9]\{1,4\}\)\(<\/guires>\)/\2/p' /home/xbian/.xbmc/userdata/advancedsettings.xml);
	if [ -z "$OLDRES" ]; then
		if [ $(cat /home/xbian/.xbmc/userdata/advancedsettings.xml | grep -c "lookandfeel" ) -eq 2 ]; then
			sed -i "s/<\/lookandfeel>/     <guires>$NEWRES<\/guires>\n   <\/lookandfeel>/g" /home/xbian/.xbmc/userdata/advancedsettings.xml
		else
			sed -i "s/<\/advancedsettings>/   <lookandfeel>\n     <guires>$NEWRES<\/guires>\n   <\/lookandfeel>\n<\/advancedsettings>/g" /home/xbian/.xbmc/userdata/advancedsettings.xml
		fi
	else
		sed -i "s/<guires>$OLDRES<\/guires>/<guires>$NEWRES<\/guires>/g" /home/xbian/.xbmc/userdata/advancedsettings.xml
	fi
	if [ $(sed -ne 's/\(.*<guires>\)\([0-9]\{1,4\}\)\(<\/guires>\)/\2/p' /home/xbian/.xbmc/userdata/advancedsettings.xml | grep -c .) -eq 1 ]; then
		return 1;
	else
		return 0;
	fi
}

# Gets the GUI resolution of XBMC
# Returns
# - 0: Failed
# - @: Resolution
function getXBMCGUIResFn() {
	CURRES=$(sed -ne 's/\(.*<guires>\)\([0-9]\{1,4\}\)\(<\/guires>\)/\2/p' /home/xbian/.xbmc/userdata/advancedsettings.xml);
	if [ -z "$CURRES" ]; then
		return 0;
	else
		return $CURRES;
	fi
}

# Sets the webserver setting XBMC
#  $1: [Integer] 1 or 0
# Returns
# - 0: Failed
# - 1: Success
function setXBMCWebserverFn() {
        if [ $1 -eq 1 ]; then
                NEWSET="false";
        else
                NEWSET="true";
        fi
        OLDSET=$(sed -ne 's/\(.*<webserver>\)\([a-z]\{1,5\}\)\(<\/webserver>\)/\2/p' /home/xbian/.xbmc/userdata/advancedsettings.xml);
        if [ -z "$OLDSET" ]; then
                if [ $(grep -c "lookandfeel" /home/xbian/.xbmc/userdata/advancedsettings.xml) -eq 2 ]; then
                        sed -i "s/<\/lookandfeel>/     <webserver>$NEWSET<\/webserver>\n   <\/lookandfeel>/g" /home/xbian/.xbmc/userdata/advancedsettings.xml
                else
                        sed -i "s/<\/advancedsettings>/   <lookandfeel>\n     <webserver>$NEWSET<\/webserver>\n   <\/lookandfeel>\n<\/advancedsettings>/g" /home/xbian/.xbmc/userdata/advancedsettings.xml
                fi
        else
                sed -i "s/<webserver>$OLDSET<\/webserver>/<webserver>$NEWSET<\/webserver>/g" /home/xbian/.xbmc/userdata/advancedsettings.xml
        fi
        if [ "$(sed -ne 's/\(.*<webserver>\)\([a-z]\{1,5\}\)\(<\/webserver>\)/\2/p' /home/xbian/.xbmc/userdata/advancedsettings.xml)" == "$NEWSET" ]; then
                return 1;
        else
                return 0;
        fi
}

# Gets the webserver setting XBMC
# Returns
# - 0: Disabled
# - 1: Enabled
function getXBMCWebserverFn() {
	CURSET=$(sed -ne 's/\(.*<webserver>\)\([a-z]\{1,5\}\)\(<\/webserver>\)/\2/p' /home/xbian/.xbmc/userdata/advancedsettings.xml);
	if [ -z "$CURSET" ] || [ "$CURSET" == "false" ]; then
		return 0;
	else
		return 1;
	fi	
}

function getXBMCtvoffFn() {
    [ ! -e /etc/default/xbmc ] && return 1
    [ "$(grep SCREENOFF=yes /etc/default/xbmc | awk -F'=' '{print $2}')" = yes ] \
        && { echo "1 $(grep AFTER= /etc/default/xbmc | awk -F'=' '{print $2}')"; return 0; }
    echo "0 0"
    return 1
}

function setXBMCtvoffFn() {
    [ ! -e /etc/default/xbmc ] && return 1

    if [ -n "$2" ]; then
        eval "sed -i 's/AFTER=[0-9]*/AFTER=$2/' /etc/default/xbmc"
    fi

    if [ $1 -eq 0 ]; then
        sed -i 's/SCREENOFF=.*/SCREENOFF=no/' /etc/default/xbmc
        grep -q SCREENOFF=no /etc/default/xbmc
    elif [ $1 -gt 0 ]; then
        sed -i 's/SCREENOFF=.*/SCREENOFF=yes/' /etc/default/xbmc
        grep -q SCREENOFF=yes /etc/default/xbmc
    else
        echo 0; return 1;
    fi

    echo $((1-$?))
}

function getXBMCusbautoFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    [ "$(grep ^ENABLED= /etc/usbmount/usbmount.conf | awk -F'=' '{print $2}')" -eq 1 ] && return 0
    return 1
}


function getXBMCusbshareFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    [ "$(grep ^SHARESMB= /etc/usbmount/usbmount.conf | awk -F'=' '{print $2}')" = yes ] && return 0
    return 1
}

function getXBMCsharerwFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    [ "$(grep ^SHARERW= /etc/usbmount/usbmount.conf | awk -F'=' '{print $2}')" = yes ] && return 0
    return 1
}

function getXBMCpriorityFn() {
    [ ! -e /etc/default/xbmc ] && return 1
    [ "$(grep ^DPRIORITY= /etc/default/xbmc | awk -F'=' '{print $2}')" = yes ] && return 0
    return 1
}
function getXBMCuuidnameFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    [ "$(grep ^UUIDNAME= /etc/usbmount/usbmount.conf | awk -F'=' '{print $2}')" = yes ] && return 0
    return 1
}
function getXBMChddspinFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && echo  0
    echo "$(grep ^SPINDOWN= /etc/usbmount/usbmount.conf | awk -F'=' '{print $2}')"
}

function setXBMCusbautoFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    if grep -q ENABLED=1 /etc/usbmount/usbmount.conf; then
        if [ $1 -eq 0 ]; then
            sed -i 's/ENABLED=1/ENABLED=0/' /etc/usbmount/usbmount.conf
            grep -q ENABLED=0 /etc/usbmount/usbmount.conf
            return $?
        else
            return 0
        fi
    elif grep -q ENABLED=0 /etc/usbmount/usbmount.conf; then
        if [ $1 -eq 1 ]; then
            sed -i 's/ENABLED=0/ENABLED=1/' /etc/usbmount/usbmount.conf
            grep -q ENABLED=1 /etc/usbmount/usbmount.conf
            return $?
        else
            return 0
        fi
    fi
    return 1
}

function setXBMCusbshareFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    if grep -q SHARESMB=yes /etc/usbmount/usbmount.conf; then
        if [ $1 -eq 0 ]; then
            sed -i 's/SHARESMB=yes/SHARESMB=no/' /etc/usbmount/usbmount.conf
            grep -q SHARESMB=no /etc/usbmount/usbmount.conf
            return $?
        else
            return 0
        fi
    elif grep -q SHARESMB=no /etc/usbmount/usbmount.conf; then
        if [ $1 -eq 1 ]; then
            sed -i 's/SHARESMB=no/SHARESMB=yes/' /etc/usbmount/usbmount.conf
            grep -q SHARESMB=yes /etc/usbmount/usbmount.conf
            return $?
        else
            return 0
        fi
    fi
    return 1
}

function setXBMCsharerwFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    if [ $1 -eq 0 ]; then
        sed -i 's/SHARERW=.*/SHARERW=no/' /etc/usbmount/usbmount.conf
        grep -q SHARERW=no /etc/usbmount/usbmount.conf
        return $?
    elif [ $1 -eq 1 ]; then
        sed -i 's/SHARERW=.*/SHARERW=yes/' /etc/usbmount/usbmount.conf
        grep -q SHARERW=yes /etc/usbmount/usbmount.conf
        return $?
    else
        return 0
    fi
    return 1
}

function setXBMCpriorityFn() {
    [ ! -e /etc/default/xbmc ] && return 1

    P=$(grep PSAVER /etc/default/xbmc)
    [ -n "$2" ] && eval $(echo "sed -i 's/$P/PSAVER=\"$2\"/' /etc/default/xbmc")
    P=$(grep PPLAYER /etc/default/xbmc)
    [ -n "$3" ] && eval $(echo "sed -i 's/$P/PPLAYER=\"$3\"/' /etc/default/xbmc")

    if grep -q DPRIORITY=yes /etc/default/xbmc; then
        if [ $1 -eq 0 ]; then
            sed -i 's/DPRIORITY=yes/DPRIORITY=no/' /etc/default/xbmc
            grep -q DPRIORITY=no /etc/default/xbmc
            return $?
        else
            return 0
        fi
    elif grep -q DPRIORITY=no /etc/default/xbmc; then
        if [ $1 -eq 1 ]; then
            sed -i 's/DPRIORITY=no/DPRIORITY=yes/' /etc/default/xbmc
            grep -q DPRIORITY=yes /etc/default/xbmc
            return $?
        else
            return 0
        fi
    fi

    return 1
}

function setXBMCuuidnameFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1

    if grep -q UUIDNAME=yes /etc/usbmount/usbmount.conf; then
        if [ $1 -eq 0 ]; then
            sed -i 's/UUIDNAME=yes/UUIDNAME=no/' /etc/usbmount/usbmount.conf
            grep -q UUIDNAME=no /etc/usbmount/usbmount.conf
            return $?
        else
            return 0
        fi
    elif grep -q UUIDNAME=no /etc/usbmount/usbmount.conf; then
        if [ $1 -eq 1 ]; then
            sed -i 's/UUIDNAME=no/UUIDNAME=yes/' /etc/usbmount/usbmount.conf
            grep -q UUIDNAME=yes /etc/usbmount/usbmount.conf
            return $?
        else
            return 0
        fi
    fi

    return 1
}

function setXBMChddspinFn() {
    [ ! -e /etc/usbmount/usbmount.conf ] && return 1
    [ $2 -gt 20 ] && return 1

    cv=$(getXBMChddspinFn)
    eval $(echo "sed -i 's/SPINDOWN=$cv/SPINDOWN=$2/' /etc/usbmount/usbmount.conf")
    r=$(eval $(echo "grep -w SPINDOWN=$2 /etc/usbmount/usbmount.conf"))
    [ "$r" = "SPINDOWN=$2" ] && { for b in /dev/sda /dev/sdb /dev/sdc /dev/sdd; do [ -b $b ] && DEVNAME=$b usbmount spindown; done; return 0; } || return 1
}
